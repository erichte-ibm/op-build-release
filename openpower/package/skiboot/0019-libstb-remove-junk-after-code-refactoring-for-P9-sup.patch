From a99eb6e60d3560100b07fc303f3b7fdb781453a9 Mon Sep 17 00:00:00 2001
From: Claudio Carvalho <cclaudio@linux.vnet.ibm.com>
Date: Sat, 11 Nov 2017 15:28:42 -0200
Subject: [PATCH 19/19] libstb: remove junk after code refactoring for P9
 support

The code of some files was imported into secureboot.c, trustedboot.c and
cvc.c. The original files now have only duplicated code. This removes
the original files.

Signed-off-by: Claudio Carvalho <cclaudio@linux.vnet.ibm.com>
---
 libstb/Makefile.inc         |   2 +-
 libstb/drivers/Makefile.inc |   2 +-
 libstb/drivers/romcode.c    | 137 --------------------------------------------
 libstb/drivers/romcode.h    |  24 --------
 libstb/drivers/sw_driver.c  |  76 ------------------------
 libstb/drivers/sw_driver.h  |  24 --------
 libstb/rom.c                |  55 ------------------
 libstb/rom.h                |  43 --------------
 8 files changed, 2 insertions(+), 361 deletions(-)
 delete mode 100644 libstb/drivers/romcode.c
 delete mode 100644 libstb/drivers/romcode.h
 delete mode 100644 libstb/drivers/sw_driver.c
 delete mode 100644 libstb/drivers/sw_driver.h
 delete mode 100644 libstb/rom.c
 delete mode 100644 libstb/rom.h

diff --git a/libstb/Makefile.inc b/libstb/Makefile.inc
index 7b90bd593dcc..d46cc9c1dead 100644
--- a/libstb/Makefile.inc
+++ b/libstb/Makefile.inc
@@ -4,7 +4,7 @@ LIBSTB_DIR = libstb
 
 SUBDIRS += $(LIBSTB_DIR)
 
-LIBSTB_SRCS = container.c rom.c tpm_chip.c stb.c cvc.c secureboot.c trustedboot.c
+LIBSTB_SRCS = container.c tpm_chip.c stb.c cvc.c secureboot.c trustedboot.c
 LIBSTB_OBJS = $(LIBSTB_SRCS:%.c=%.o)
 LIBSTB = $(LIBSTB_DIR)/built-in.o
 
diff --git a/libstb/drivers/Makefile.inc b/libstb/drivers/Makefile.inc
index 9eaa257b42a2..3b8ed0f81490 100644
--- a/libstb/drivers/Makefile.inc
+++ b/libstb/drivers/Makefile.inc
@@ -4,7 +4,7 @@ DRIVERS_DIR = libstb/drivers
 
 SUBDIRS += $(DRIVERS_DIR)
 
-DRIVERS_SRCS = romcode.c tpm_i2c_interface.c tpm_i2c_nuvoton.c sw_driver.c
+DRIVERS_SRCS = tpm_i2c_interface.c tpm_i2c_nuvoton.c
 DRIVERS_OBJS = $(DRIVERS_SRCS:%.c=%.o)
 DRIVERS = $(DRIVERS_DIR)/built-in.o
 
diff --git a/libstb/drivers/romcode.c b/libstb/drivers/romcode.c
deleted file mode 100644
index cc64c8b4d824..000000000000
--- a/libstb/drivers/romcode.c
+++ /dev/null
@@ -1,137 +0,0 @@
-/* Copyright 2013-2016 IBM Corp.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * 	http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
- * implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#include <chip.h>
-#include <xscom.h>
-#include <string.h>
-#include <skiboot.h>
-#include "../status_codes.h"
-#include "../rom.h"
-#include "romcode.h"
-
-#define DRIVER_NAME	"romcode"
-
-#define ROMCODE_MEMORY_SIZE	(16 * 1024)
-#define ROMCODE_XSCOM_ADDRESS	0x02020017
-
-/*
- *  From the source code of the ROM code
- */
-#define ROMCODE_SHA512_OFFSET		0x20
-#define ROMCODE_VERIFY_OFFSET		0x30
-
-static const char *compat = "ibm,secureboot-v1";
-static void *romcode_base_addr = NULL;
-static sha2_hash_t *hw_key_hash = NULL;
-
-/*
- * Assembly interfaces to call into the Container Verification Code.
- * func_ptr: CVC base address + offset
- */
-ROM_response __cvc_verify_v1(void *func_ptr, ROM_container_raw *container,
-			     ROM_hw_params *params);
-void __cvc_sha512_v1(void *func_ptr, const uint8_t *data, size_t len,
-		     uint8_t *digest);
-
-static int romcode_verify(void *container)
-{
-	ROM_hw_params hw_params;
-	ROM_response rc;
-
-	memset(&hw_params, 0, sizeof(ROM_hw_params));
-	memcpy(&hw_params.hw_key_hash, hw_key_hash, sizeof(sha2_hash_t));
-	rc = __cvc_verify_v1(romcode_base_addr + ROMCODE_VERIFY_OFFSET,
-			     (ROM_container_raw*) container, &hw_params);
-	if (rc != ROM_DONE) {
-		/*
-		 * Verify failed. hw_params.log indicates what checking has
-		 * failed. This will abort the boot process.
-		 */
-		prlog(PR_ERR, "ROM: %s failed (rc=%d, hw_params.log=0x%llx)\n",
-		      __func__, rc, be64_to_cpu(hw_params.log));
-		return STB_VERIFY_FAILED;
-	}
-	return 0;
-}
-
-static void romcode_sha512(const uint8_t *data, size_t len, uint8_t *digest)
-{
-	memset(digest, 0, sizeof(sha2_hash_t));
-	__cvc_sha512_v1(romcode_base_addr + ROMCODE_SHA512_OFFSET,
-			data, len, digest);
-}
-
-static void romcode_cleanup(void) {
-	if (romcode_base_addr)
-		free(romcode_base_addr);
-	hw_key_hash = NULL;
-}
-
-static struct rom_driver_ops romcode_driver = {
-	.name    = DRIVER_NAME,
-	.verify  = romcode_verify,
-	.sha512  = romcode_sha512,
-	.cleanup = romcode_cleanup
-};
-
-void romcode_probe(const struct dt_node *node)
-{
-	/* This xscom register has the ROM code base address */
-	const uint32_t reg_addr = ROMCODE_XSCOM_ADDRESS;
-	uint64_t reg_data;
-	struct proc_chip *chip;
-	const char* hash_algo;
-
-	if (!dt_node_is_compatible(node, compat)) {
-		prlog(PR_DEBUG, "ROM: %s node is not compatible\n",
-		      node->name);
-		return;
-	}
-	/*
-	 * secureboot-v1 defines containers with sha512 hashes
-	 */
-	hash_algo = dt_prop_get(node, "hash-algo");
-	if (strcmp(hash_algo, "sha512")) {
-		/**
-		 * @fwts-label ROMHashAlgorithmInvalid
-		 * @fwts-advice Hostboot creates the ibm,secureboot node and
-		 * the hash-algo property. Check that the ibm,secureboot node
-		 * layout has not changed.
-		 */
-		prlog(PR_ERR, "ROM: hash-algo=%s not expected\n", hash_algo);
-		return;
-	}
-	hw_key_hash = (sha2_hash_t*) dt_prop_get(node, "hw-key-hash");
-	romcode_base_addr = malloc(ROMCODE_MEMORY_SIZE);
-	assert(romcode_base_addr);
-	/*
-	 * The logic that contains the ROM within the processor is implemented
-	 * in a way that it only responds to CI (cache inhibited) operations.
-	 * Due to performance issues we copy the verification code from the
-	 * secure ROM to RAM and we use memcpy_from_ci to do that.
-	 */
-	chip = next_chip(NULL);
-	xscom_read(chip->id, reg_addr, &reg_data);
-	memcpy_from_ci(romcode_base_addr, (void*) reg_data,
-		       ROMCODE_MEMORY_SIZE);
-	/*
-	 * Skiboot runs with IR (Instruction Relocation) &
-	 * DR (Data Relocation) off, so there is no need to either MMIO
-	 * the ROM code or set the memory region as executable.
-         * skiboot accesses the physical memory directly. Real mode.
-	 */
-	rom_set_driver(&romcode_driver);
-}
diff --git a/libstb/drivers/romcode.h b/libstb/drivers/romcode.h
deleted file mode 100644
index 4152eaee671d..000000000000
--- a/libstb/drivers/romcode.h
+++ /dev/null
@@ -1,24 +0,0 @@
-/* Copyright 2013-2016 IBM Corp.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
- * implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#ifndef __ROMCODE_H
-#define __ROMCODE_H
-
-#include <device.h>
-
-extern void romcode_probe(const struct dt_node *node);
-
-#endif /* __ROMCODE_H */
diff --git a/libstb/drivers/sw_driver.c b/libstb/drivers/sw_driver.c
deleted file mode 100644
index 287dae9d3a8d..000000000000
--- a/libstb/drivers/sw_driver.c
+++ /dev/null
@@ -1,76 +0,0 @@
-/* Copyright 2013-2016 IBM Corp.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * 	http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
- * implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#include <chip.h>
-#include <string.h>
-#include <skiboot.h>
-#include <libstb/mbedtls/sha512.h>
-#include "../rom.h"
-#include "sw_driver.h"
-
-static sha2_hash_t *hw_key_hash = NULL;
-
-static int stb_software_verify(void *container __unused)
-{
-	return -100;
-}
-
-static void stb_software_sha512(const uint8_t *data, size_t len, uint8_t *digest)
-{
-	mbedtls_sha512_context ctx;
-	mbedtls_sha512_init(&ctx);
-	memset(digest, 0, sizeof(sha2_hash_t));
-	mbedtls_sha512_starts(&ctx, 0); // SHA512 = 0
-	mbedtls_sha512_update(&ctx, data, len);
-	mbedtls_sha512_finish(&ctx, digest);
-	mbedtls_sha512_free(&ctx);
-}
-
-static void stb_software_cleanup(void)
-{
-	return;
-}
-
-static struct rom_driver_ops sw_driver = {
-	.name    = "software",
-	.verify  = stb_software_verify,
-	.sha512  = stb_software_sha512,
-	.cleanup = stb_software_cleanup
-};
-
-void stb_software_probe(const struct dt_node *node)
-{
-	const char* hash_algo;
-
-	if (!dt_node_is_compatible(node, "ibm,secureboot-v1-softrom")) {
-		return;
-	}
-
-	hash_algo = dt_prop_get(node, "hash-algo");
-	if (strcmp(hash_algo, "sha512")) {
-		/**
-		 * @fwts-label ROMHashAlgorithmInvalid
-		 * @fwts-advice Hostboot creates the ibm,secureboot node and
-		 * the hash-algo property. Check that the ibm,secureboot node
-		 * layout has not changed.
-		 */
-		prlog(PR_ERR, "ROM: hash-algo=%s not expected\n", hash_algo);
-		return;
-	}
-	hw_key_hash = (sha2_hash_t*) dt_prop_get(node, "hw-key-hash");
-
-	rom_set_driver(&sw_driver);
-}
diff --git a/libstb/drivers/sw_driver.h b/libstb/drivers/sw_driver.h
deleted file mode 100644
index 73adabf08214..000000000000
--- a/libstb/drivers/sw_driver.h
+++ /dev/null
@@ -1,24 +0,0 @@
-/* Copyright 2013-2016 IBM Corp.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
- * implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#ifndef __SW_DRIVER_H
-#define __SW_DRIVER_H
-
-#include <device.h>
-
-extern void stb_software_probe(const struct dt_node *node);
-
-#endif /* __ROMCODE_H */
diff --git a/libstb/rom.c b/libstb/rom.c
deleted file mode 100644
index 5f9abd272889..000000000000
--- a/libstb/rom.c
+++ /dev/null
@@ -1,55 +0,0 @@
-/* Copyright 2013-2016 IBM Corp.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
- * implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#include <skiboot.h>
-#include "rom.h"
-#include "drivers/romcode.h"
-#include "drivers/sw_driver.h"
-
-static struct rom_driver_ops *rom_driver = NULL;
-
-struct rom_driver_ops* rom_init(const struct dt_node *node __unused)
-{
-	if (rom_driver)
-		goto end;
-
-	/* ROM drivers supported */
-	romcode_probe(node);
-
-	if (!rom_driver)
-		stb_software_probe(node);
-
-	if (!rom_driver)
-		prlog(PR_NOTICE, "ROM: no rom driver found\n");
-end:
-	return rom_driver;
-}
-
-void rom_set_driver(struct rom_driver_ops *driver)
-{
-	if (rom_driver) {
-		/**
-		 * @fwts-label ROMAlreadyRegistered
-		 * @fwts-advice ibm,secureboot already registered. Check if
-		 * rom_init called twice or the same driver is probed twice
-		 */
-		prlog(PR_WARNING, "ROM: %s driver already registered\n",
-		      driver->name);
-		return;
-	}
-	rom_driver = driver;
-	prlog(PR_NOTICE, "ROM: %s driver registered\n", driver->name);
-}
diff --git a/libstb/rom.h b/libstb/rom.h
deleted file mode 100644
index e1a74976fe82..000000000000
--- a/libstb/rom.h
+++ /dev/null
@@ -1,43 +0,0 @@
-/* Copyright 2013-2016 IBM Corp.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
- * implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#ifndef __ROM_H
-#define __ROM_H
-
-#include <stdint.h>
-#include <stdbool.h>
-#include <stdlib.h>
-#include "container.h"
-
-struct rom_driver_ops {
-	const char* name;
-	int  (*verify)(void *container);
-	void (*sha512)(const uint8_t *data, size_t len, uint8_t *digest);
-	void (*cleanup)(void);
-};
-
-/*
- * Load a compatible driver to access the functions of the
- * verification code flashed in the secure ROM
- */
-extern struct rom_driver_ops* rom_init(const struct dt_node *node);
-
-/*
- * Set the rom driver that will be used
- */
-extern void rom_set_driver(struct rom_driver_ops *driver);
-
-#endif /* __ROM_H */
-- 
2.13.6

