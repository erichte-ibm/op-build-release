From 747666dbf1101306ae3139031db39faa35e73063 Mon Sep 17 00:00:00 2001
From: Jenny Huynh <jhuynh@us.ibm.com>
Date: Thu, 4 Oct 2018 12:29:54 -0500
Subject: [PATCH 3/3] Mask NMMUFIR(7), NMMUFIR(36:39)

Mask nmmu internal timeout checkers to allow higher-level
timeouts to handle proc callouts.

Change-Id: I4484cd94666e0335bcc2169ffd9c9ab8dce4335a
CQ:SW447361
Tested-by: Jenkins Server <pfd-jenkins+hostboot@us.ibm.com>
Tested-by: Hostboot CI <hostboot-ci+hostboot@us.ibm.com>
Tested-by: PPE CI <ppe-ci+hostboot@us.ibm.com>
Reviewed-by: Joseph J. McGill <jmcgill@us.ibm.com>
Reviewed-by: Jennifer A. Stofer <stofer@us.ibm.com>
Reviewed-on: http://rchgit01.rchland.ibm.com/gerrit1/70798
Reviewed-on: http://rchgit01.rchland.ibm.com/gerrit1/70820
Tested-by: Jenkins OP Build CI <op-jenkins+hostboot@us.ibm.com>
Tested-by: Jenkins OP HW <op-hw-jenkins+hostboot@us.ibm.com>
Reviewed-by: William G. Hoffa <wghoffa@us.ibm.com>
---
 src/import/chips/p9/procedures/hwp/initfiles/p9_mmu_scom.C | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/import/chips/p9/procedures/hwp/initfiles/p9_mmu_scom.C b/src/import/chips/p9/procedures/hwp/initfiles/p9_mmu_scom.C
index 22aaa8b1b..b54aaaf9c 100644
--- a/src/import/chips/p9/procedures/hwp/initfiles/p9_mmu_scom.C
+++ b/src/import/chips/p9/procedures/hwp/initfiles/p9_mmu_scom.C
@@ -5,7 +5,7 @@
 /*                                                                        */
 /* OpenPOWER HostBoot Project                                             */
 /*                                                                        */
-/* Contributors Listed Below - COPYRIGHT 2016,2018                        */
+/* Contributors Listed Below - COPYRIGHT 2016,2019                        */
 /* [+] International Business Machines Corp.                              */
 /*                                                                        */
 /*                                                                        */
@@ -39,7 +39,7 @@ constexpr uint64_t literal_0x40DB000000000000 = 0x40DB000000000000;
 constexpr uint64_t literal_0x3 = 0x3;
 constexpr uint64_t literal_0x1 = 0x1;
 constexpr uint64_t literal_0x0000FAF800FF = 0x0000FAF800FF;
-constexpr uint64_t literal_0x0400FAFC00FF = 0x0400FAFC00FF;
+constexpr uint64_t literal_0x0500FAFC0FFF = 0x0500FAFC0FFF;
 constexpr uint64_t literal_0x000000000000 = 0x000000000000;
 constexpr uint64_t literal_0x910000040F00 = 0x910000040F00;
 constexpr uint64_t literal_0x911100000F00 = 0x911100000F00;
@@ -176,7 +176,7 @@ fapi2::ReturnCode p9_mmu_scom(const fapi2::Target<fapi2::TARGET_TYPE_PROC_CHIP>&
             }
             else if ((l_TGT0_ATTR_CHIP_EC_FEATURE_NMMU_NDD1 == literal_0))
             {
-                l_scom_buffer.insert<0, 48, 16, uint64_t>(literal_0x0400FAFC00FF );
+                l_scom_buffer.insert<0, 48, 16, uint64_t>(literal_0x0500FAFC0FFF );
             }
 
             FAPI_TRY(fapi2::putScom(TGT0, 0x5012c43ull, l_scom_buffer));
-- 
2.21.0.windows.1

